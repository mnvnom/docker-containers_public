---
- name: Update apt cache
  apt:
    update_cache: yes

- name: Install required packages
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker repository
  apt_repository:
# yamllint disable-line rule:line-length
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: install pip for python 3
  apt:
    name: python3-pip
    state: present
  become: true
  when: ansible_python.version.major == 3

- name: install python docker module
  pip:
    name: docker
    state: present

- name: Update apt cache (again)
  apt:
    update_cache: yes

- name: Install Docker
  apt:
    name: docker-ce
    state: present

- name: install docker-compose frome pip
  pip:
    name: docker-compose
    state: present
    executable: pip3

- name: install required system packages for docker
  package:
    name: "{{ item }}"
    state: present
  loop:
    - wget

- name: download latest version docker-compose
# yamllint disable-line rule:line-length
  shell: wget -O /usr/local/bin/docker-compose https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)
  become: true


- name: make docker-compose executable
  file:
    path: /usr/local/bin/docker-compose
    mode: 'a+x'
  become: true

- name: check install docker-compose
  shell: docker-compose --version
  register: docker_compose_version
  ignore_errors: true

- name: get version docker-compose
  debug:
    msg: "Docker Compose is installed,{{ docker_compose_version.stdout }}"
  when: docker_compose_version is succeeded
